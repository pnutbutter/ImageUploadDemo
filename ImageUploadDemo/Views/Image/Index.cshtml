@model AS.ImageAlbum.Website.Models.ImageData.ImageIndex

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .img-block {
        padding-right: 0px;
        padding-left: 0px;
        margin: 0;
    }

    .image-box {
        width: 100%;
        height: 100%;
    }

    .image-overlay {
        position: absolute;
        bottom: 100%;
        width: 100%;
        opacity: 0;
        background-color: rgba(0, 0, 0, 0);
        color: white;
        margin: 0;
        bottom: 0;
        padding: 5px;
        transition: all .3s ease .15s;
    }

    .img-block:hover .image-overlay {
        background-color: rgba(0, 0, 0, .75);
        opacity: 1;
        height: auto;
    }
</style>
<div class="row">
    <div class="col-md-4 col-lg-2">
        <div class="row">
            <div class="col-md-12">
                <input type="text" id="search" /><button id="search-btn" class="btn btn-primary">Search</button>
            </div>
        </div>
            <div class="row">
                <div class="col-md-12">
                    <strong>Filters:</strong>
                </div>
            </div>
            @for (int i = 0; i < this.Model.TagFilters.Length; i++)
            {
                <div class="row">
                    <div class="col-md-4">
                        <label for="">@this.Model.TagFilters[i]</label>
                    </div>
                    <div class="col-md-8">
                        <input type="checkbox" class="filter-input" data-id="@this.Model.TagFilterIds[i]" data-toggle="toggle" data-on="On" data-off="off" data-onstyle="success" data-offstyle="danger">
                    </div>
                </div>
            }


        </div>
    <div class="col-md-8 col-lg-10">
        <div id="album" class="row text-center text-lg-left">
            <div class="col-lg-3 col-md-4 col-6 img-block">
                <img class="img-fluid image-box" src="test" alt="">
                <div class="image-overlay">
                    <p class="image-title">
                    </p>
                    <p class="text-center">
                        <a href="#" class="btn btn-primary edit-image-button">Edit</a> <a href="#" class="btn btn-primary delete-image-button">Delete</a>
                    </p>
                </div>
            </div>
        </div>
        <div class="row text-center">
            <div class="col-sm-12">
                <p>
                    <a href="#" id="load-image-btn" class="btn btn-primary" data-begin="4">Load More Images</a>
                </p>
            </div>
        </div>
    </div>
</div>
@if (!string.IsNullOrWhiteSpace(this.Model.Message))
{
    <div class="modal hide fade in" id="message-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Message</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@this.Model.Message</p>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    <script type="text/javascript">

        //global variable to reference image HTML - encapsulating into a function
        var imageContainer=null;
        getImageContainer = function () {
            //if first time load image container
            if (!imageContainer) {
                imageContainer = $(".img-block").clone();
                $(".img-block").remove();
            }
            return imageContainer;
        }

        //encapsulate static load amount
        getLoadAmount = function()
        {
            return 4;
        }

        $(document).ready(function () {
            //initial page load
            LoadImages(0, getLoadAmount(), null);

            $(".filter-input").change(function (e) {
                FilterSearchLoad();
            })

            $("#search-btn").click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                FilterSearchLoad();
            })

            $("#search").keypress(function (e) {
                if (e.keyCode === 13) {
                    e.preventDefault();
                    e.stopPropagation();
                    FilterSearchLoad();
                }
            })

            //page loads more images on load button click
            $("#load-image-btn").click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                var begin = $(this).data("begin");
                LoadImages(begin, begin + getLoadAmount());
                //update data begin for next button click
                $(this).data("begin", begin + getLoadAmount());
            })
        })

        FilterSearchLoad = function () {
            $("#load-image-btn").data("begin", 0);
            $("#album").html('');
            var begin = 0;
            LoadImages(begin, begin + getLoadAmount());
            //update data begin for next button click
            $("#load-image-btn").data("begin", begin + getLoadAmount());
        }


        LoadImages = function (beginIndex, endIndex) {

            var data;

            var tagFilters = new Array();
            $(".filter-input").each(function () {
                console.log(this.checked);
                console.log($(this).data("id"));
                if (this.checked) {
                    tagFilters.push($(this).data("id"));
                }
            })
            console.log($(".filter-input").length);
            console.log(tagFilters);

            var searchString = $('#search').val();;

            //pass filters if they exist, unsure if an array JSON parse will map to model binding so formatting directly for now
            if (tagFilters != null && tagFilters.length > 0) {
                var filterString = '['
                for (var i = 0; i < tagFilters.length; i++) {
                    if (tagFilters.length == (i + 1)) {
                        filterString = filterString + '"' + tagFilters[i] + '"'
                    } else {
                        filterString = filterString + '"' + tagFilters[i] + '",';
                    }
                }
                filterString = filterString + ']';

                data = {
                    BeginIndex: beginIndex,
                    EndIndex: endIndex,
                    Search: searchString,
                    TagFilters: tagFilters
                };
            } else {
                data = {
                    BeginIndex: beginIndex,
                    EndIndex: endIndex,
                    Search: searchString
                }
            }

            //dynamically load images
            var dataType = 'application/x-www-form-urlencoded; charset=utf-8';
            $.ajax({
                type: "POST",
                url: '/Image/ImageLoad',
                dataType: 'json',
                contentType: dataType,
                data: data,
                success: function (data) {
                    console.log(data);
                    var items = JSON.parse(data);

                    for (var i = 0; i < items.length; i++) {
                        var localImageContainer = getImageContainer().clone();
                        localImageContainer.find("img").attr("src", "/Image/Images/" + items[i].ImageUrl);
                        localImageContainer.find("img").attr("alt", items[i].ImageAlt);
                        localImageContainer.find(".edit-image-button").attr("href", "@Url.Action("Edit")/"+items[i].ImageId)
                        localImageContainer.find(".image-title").text(items[i].ImageName);

                        $("#album").append($(localImageContainer));
                    }

                }
            });
        }
        @if (!string.IsNullOrWhiteSpace(this.Model.Message))
        {
        <text>
        $(document).ready(function () {
            $('#message-modal').modal('show');
        })
        </text>
        }


    </script>
}
